#!/bin/bash

set -xe

pwd
env

cf api $PWS_API --skip-ssl-validation

cf login -u $PWS_USER -p $PWS_PWD -o "$PWS_ORG" -s "$PWS_SPACE"

cf apps

cf routes


export PWS_DOMAIN_NAME=$PWS_APP_DOMAIN
export MAIN_ROUTE_HOSTNAME=main-$PWS_APP_HOSTNAME

export NEXT_APP_COLOR=$(cat ./current-app-info/next-app.txt)
export NEXT_APP_HOSTNAME_STAGING=$PWS_APP_SUFFIX-$NEXT_APP_COLOR

export CURRENT_APP_COLOR=$(cat ./current-app-info/current-app.txt)
export CURRENT_APP_HOSTNAME=$PWS_APP_SUFFIX-$CURRENT_APP_COLOR

export NEXT_APP_COLOR_STRIPPED=$( echo "$NEXT_APP_COLOR" | awk -F"-staging" '{print $1}') 
export NEXT_APP_HOSTNAME=$PWS_APP_SUFFIX-$NEXT_APP_COLOR_STRIPPED

echo "Mapping route and rename"
main_app_exist=$(cf apps | grep "$CURRENT_APP_HOSTNAME" | grep -v "\-staging" | wc -l)
next_app_exist=$(cf apps | grep "$NEXT_APP_HOSTNAME_STAGING" | wc -l)


if [ $main_app_exist -eq 0 ] && [ $next_app_exist -eq 0 ]
then
  echo "No app for $CURRENT_APP_HOSTNAME $NEXT_APP_HOSTNAME_STAGING, exit"
  exit 0

elif [ $main_app_exist -eq 0 ] && [ $next_app_exist -eq 1 ] 
then
echo "only new app exist. new app promotes to main app, remove new "
cf rename $NEXT_APP_HOSTNAME_STAGING $NEXT_APP_HOSTNAME
cf unmap-route $NEXT_APP_HOSTNAME $PWS_DOMAIN_NAME --hostname $NEXT_APP_HOSTNAME_STAGING

elif [ $main_app_exist -eq 1 ] && [ $next_app_exist -eq 1 ] 
then
echo "both staging and main app exists. staging app promotes to main app with the same instance count of existing main account"
echo "main app will unmap route and stop process."

cf unmap-route $CURRENT_APP_HOSTNAME $PWS_DOMAIN_NAME --hostname $MAIN_ROUTE_HOSTNAME
cf stop $CURRENT_APP_HOSTNAME
cf rename $NEXT_APP_HOSTNAME_STAGING $NEXT_APP_HOSTNAME
cf unmap-route $NEXT_APP_HOSTNAME $PWS_DOMAIN_NAME --hostname $NEXT_APP_HOSTNAME_STAGING
fi

echo "Mapping route and rename done."
cf routes
cf apps



